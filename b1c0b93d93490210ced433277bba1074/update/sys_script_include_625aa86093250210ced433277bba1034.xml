<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>global.CustomTaskSi</api_name>
        <caller_access/>
        <client_callable>true</client_callable>
        <description/>
        <name>CustomTaskSi</name>
        <script><![CDATA[var CustomTaskSi = Class.create();
CustomTaskSi.prototype = Object.extendsObject(global.AbstractAjaxProcessor, {

	scheduleUpdatefiveDays: function(){

		var gdT = this.getParameter('sysparm_sdate');
		var csd = new GlideDateTime(gdT);
		var dur = new GlideDuration(60 * 60 * 1000 * 24 * 5);
		var sch = new GlideSchedule(''); 
		var adsc = sch.add(csd, dur);
		var fval = adsc.getDisplayValue();
		var sd = fval.split(' ');
		
		return sd[0];

	},


	userDetails: function(){

	var gr = new GlideRecord('sys_user');
	gr.addQuery('sys_id', this.getParameter('sysparm_aval'));
	gr.query();
	var obj = {};
	if(gr.next()){
		obj.fname = gr.getValue('first_name');
		obj.lname = gr.getValue('last_name');
		obj.eml = gr.getValue('email');
	}

	return JSON.stringify(obj);

	},


	dateUpdate: function(){

		var scValue = this.getParameter('sysparm_dateValue');
		var dateTimeValue = new GlideDateTime(scValue);
		var dateValue = new GlideDateTime();
		var difDate = gs.dateDiff(dateValue, dateTimeValue, true );
		
		// var obj ={};
		// obj.n = difDate<0 ? 'past':'future';
		if (difDate<0){
			return 'past';
			//return JSON.parse(obj);
		}
	},


    updateParentField: function() {
		var objt = {};
        var ct = new GlideRecord('u_customtask');
        ct.initialize();
		ct.insert();
		return ct;
    },


    clearAssignedto: function() {
        var issues = this.getParameter('sysparm_celldata');
        var ids = issues.split(',');
        var sysids = '';
        for (var i = 0; i < ids.length; i++) {
            var gr = new GlideRecord('u_customtask');
            if (gr.get(ids[i])) {
                gr.assigned_to = '';
                if (sysids != '') {
                    sysids += ',' + gr.update();
                } else {
                    sysids = gr.update();
                }
            }
        }
        return sysids;

    },


    type: 'CustomTaskSi'
});]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-04-10 10:24:22</sys_created_on>
        <sys_id>625aa86093250210ced433277bba1034</sys_id>
        <sys_mod_count>54</sys_mod_count>
        <sys_name>CustomTaskSi</sys_name>
        <sys_package display_value="DemoTable" source="b1c0b93d93490210ced433277bba1074">b1c0b93d93490210ced433277bba1074</sys_package>
        <sys_policy/>
        <sys_scope display_value="DemoTable">b1c0b93d93490210ced433277bba1074</sys_scope>
        <sys_update_name>sys_script_include_625aa86093250210ced433277bba1034</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-05-29 07:19:44</sys_updated_on>
    </sys_script_include>
</record_update>
